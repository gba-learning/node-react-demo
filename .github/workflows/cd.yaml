name: CD

on: push
#  push:
#    branches:
#      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      id-token: write
      contents: read
    env:
      TF_VAR_backend_repository_name: ${{ vars.ECR_BACKEND_REPOSITORY_NAME }}
    steps:
      # TODO: Create OIDC provider + OIDC role in IaC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_AWS_ROLE_ARN }}
          aws-region: eu-west-1
      - name: Checkout
        uses: actions/checkout@v4
      # TODO: Consider using docker action so we have consistency between local and CI
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2
      - name: Terraform Init
        run: terraform init
        working-directory: ./infrastructure
      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./infrastructure
      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: ./infrastructure
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./infrastructure
  deploy-backend:
    runs-on: ubuntu-latest
    needs:
      - deploy-infrastructure
    steps:
      - run: echo Hello world from deploy-backed job
